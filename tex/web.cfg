\Preamble{xhtml,3,sec-filename,info}


%%%%%%%%%%%%%%%%%%%%%%
% include CSS and JS files
% %%%%%%%%%%%%%%%%%%%%

\Configure{AddCss}{css/style.css}
\Configure{AddJs}{js/toc.js}

%%%%%%%%%%%%%%%%%%%%%%
% include HTML header and footer
%%%%%%%%%%%%%%%%%%%%%%

\Configure{@BODY}{\special{t4ht*<../html/header.html}}
\Configure{@/BODY}{\special{t4ht*<../html/footer.html}}



%%%%%%%%%%%%%%%%%%%
% CSS fixes
%%%%%%%%%%%%%%%%%%%

% use natural size for images
\Configure{Gin-dim}{} 
\Css{img { 
    max-width: 100\%; 
    height: auto; 
}} 

%%%%%%%%%%%%%%%%%%%%%
% sanitize filenames
%%%%%%%%%%%%%%%%%%%%%

% this code will make safe names for output HTML files from section titles 
% it will remove non-letter characters, replace spaces with underscores, convert to lowercase 
% and replace diacriticts with ASCII characters

\directlua{

local chardata = require "make4ht-char-def"
local uchar = utf8.char


local function is_letter(info)
  %-- test if character is letter
  local category = info.category or ""
  return category:match("^l") 
end

local function is_number(char)
  return char >= 48 and char <= 57
end

local function is_space(info)
  local category = info.category or ""
  return category == "zs"
end


% this code is reused from make4ht sectionid DOM filter
% it will convert accented characters to ASCII
local function normalize_letter(char, result)
  local info = chardata[char] or {}
  % -- first get lower case of the letter
  local lowercase = info.lccode or char
  %-- remove accents. the base letter is in the shcode field
  local lowerinfo = chardata[lowercase] or {}
  %-- when no shcode, use the current lowercase char
  local shcode = lowerinfo.shcode or lowercase
  %-- shcode can be table if it contains multiple characters
  %-- normaliz it to a table, so we can add all letters to 
  %-- the resulting string
  shcode = type(shcode) == "table" and shcode or {shcode}
  for _, x in ipairs(shcode) do
    table.insert(result, uchar(x))
  end
end


local used_names = {}

function sanitize_name(filename)
  % name = unicode.utf8.lower(name)
  local result = {}
  for _,char in utf8.codes(filename) do
    local info = chardata[char] or {}
    if is_space(info) then
      table.insert(result, "_")
    elseif is_letter(info) then
      normalize_letter(char, result)
    elseif is_number(char) then
      table.insert(result, uchar(char))
    end
  end
  % -- convert table with normalized characters to string
  local name = table.concat(result)
  % -- handle multiple names with the same name
  local count = used_names[name] or 0
  % add numeric suffix to the name if there are duplicates
  name = name .. (count > 0 and ("_" .. count) or "")
  used_names[name] = count + 1
  return name
end
}

% use lua function to sanitize filenames
\ExplSyntaxOn
\Configure{CutAt-filename}{\expandafter\NextFile\expandafter{\directlua{tex.print(sanitize_name("\luaescapestring{\text_purify:n{#2}}"))}.html}}
\ExplSyntaxOff
%%%%%%%%%%%


%%%%%%%%%%%%%%%%%
% main mini TOC
%%%%%%%%%%%%%%%%%

% put full TOC on each page
\Configure{crosslinks+}{%
  \bgroup
  % container for the page toc
  \Configure{tableofcontents}{\IgnorePar\EndP\HCode{<nav class="TOC">}\IgnorePar}
  {\HCode{\Hnewline}}{\IgnorePar\HCode{</nav>\Hnewline}\ShowPar}{}{}%
  \TableOfContents[chapter,likechapter,section,likesection]% Print table of contents before crosslinks
  \egroup
  \ifvmode\IgnorePar\fi\EndP%
  \HCode{<main class="main-content">\Hnewline<nav class="crosslinks-top">} }
  {\HCode{</nav>\Hnewline}}%
{\ifvmode\IgnorePar\fi\EndP%
  \HCode{<nav class="crosslinks-bottom">}}{\HCode{</nav>}}{}{}

% configuration for TOC on the main page, which is not configured by the previous command
\Configure{tableofcontents}{\IgnorePar\EndP\HCode{<nav class="TOC">}\IgnorePar}
{}{\IgnorePar\HCode{</nav>\Hnewline<main class="main-content">\Hnewline}\ShowPar}{}{}%

% close the <main> element started in \Configure{crosslinks+} and \Configure{tableofcontents}
\Configure{@/BODY}{\ifvmode\IgnorePar\fi\EndP\HCode{</main>}}

\def\toclikechapter#1#2#3{\par
  \HCode{<span class="chapterToc">}#2\HCode{</span>}\par}%
\def\toclikesection#1#2#3{\par\HCode{<span class="sectionToc" >}#2\HCode{</span>}\par}

% show only crosslinks to prev, main and next pages
\Configure{crosslinks*}{prev}{up}{next}{}

%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%
% section mini TOC 
%%%%%%%%%%%%%%%%%%%

\TocAt{section,/likesection,/chapter,/likechapter,/appendix,/part,%
             subsection,subsubsection}

%%%%%%%%%%%%%%%%%%%

\begin{document}
\EndPreamble
